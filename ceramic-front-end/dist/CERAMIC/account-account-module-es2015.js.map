{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    // {\n    //     path: 'signup',\n    //     component: SignupComponent\n    // },\n    // {\n    //     path: 'reset-password',\n    //     component: PasswordresetComponent\n    // },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UiModule } from '../../shared/ui/ui.module';\nimport { AuthRoutingModule } from './auth-routing';\n\nimport { LoginComponent } from './login/login.component';\n// import { SignupComponent } from './signup/signup.component';\n// import { PasswordresetComponent } from './passwordreset/passwordreset.component';\n// import { FormModule } from 'src/app/pages/form/form.module';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    UiModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  private baseUrl = 'http://localhost:3000';\n  submitted = false;\n  public incorrect = false;\n  public msgErr = '';\n  error = '';\n  returnUrl: string;\n  mdp:any;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, public authFackservice: AuthfakeauthenticationService, public http: HttpClient) { \n    this.http.get(this.baseUrl+'/ceramicauth').subscribe(data =>{\n       this.mdp = data\n      //  console.log(this.mdp);\n     }, error=> console.error(error));\n  }\n\n  ngOnInit() {\n    document.body.removeAttribute('data-layout');\n    document.body.classList.add('auth-body-bg');\n\n    this.loginForm = this.formBuilder.group({\n      // email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n\n    // reset login status\n    // this.authenticationService.logout();\n    // get return url from route parameters or default to '/'\n    // tslint:disable-next-line: no-string-literal\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\nconsole.log(this.f.password.value);\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (this.f.password.value != this.mdp) {\n        this.incorrect=true;\n        this.msgErr = 'Mot de passe incorrect !'\n    //     console.log(\"Connection...\")\n    //       return true;\n       \n      }else{\n        this.incorrect = false\n        this.msgErr = 'Connection en cours ...'\n        \n        console.log(this.incorrect);\n        this.authFackservice.login().pipe(first()).subscribe(\n          data => {\n            this.router.navigate(['/']);\n          }\n        )\n          \n      }\n      // console.log(this.mdp);\n      console.log(this.msgErr+ ' ' +this.incorrect);\n      \n    // else{console.log(\"echec de la connection\"); return false\n    // }\n    // } \n\n    // if(this.onSubmit() === true){\n    //   this.router.navigate(['/']);\n    }\n    // else {\n    //     this.authFackservice.login(this.f.email.value)\n    //       .pipe(first())\n    //       .subscribe(\n    //         data => {\n    //           this.router.navigate(['/']);\n    //         },\n    //         error => {\n    //           this.error = error ? error : '';\n    //         });\n    //   }\n    // }\n  }\n\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a routerLink=\"\"><i class=\"mdi mdi-home-variant h2 text-white\"></i></a>\n</div>\n<div>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-lg-4\">\n        <div class=\"authentication-page-content p-4 d-flex align-items-center min-vh-100\">\n          <div class=\"w-100\">\n            <div class=\"row justify-content-center\">\n              <div class=\"col-lg-9\">\n                <div>\n                  <div class=\"text-center\">\n                    <div>\n                      <a routerLink=\"\" class=\"logo\"><img src=\"assets/images/logo-dark.png\" height=\"20\" alt=\"logo\"></a>\n                    </div>\n\n                    <h4 class=\"font-size-18 mt-4\">Bienvenue !</h4>\n                    <p class=\"text-muted\">Entrer votre mot de passe pour avoir acces au service CERAMIC.</p>\n                  </div>\n\n                  <div class=\"p-2 mt-5\">\n                    <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n                      <!-- <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-user-2-line auti-custom-input-icon\"></i>\n                        <label for=\"email\">Email</label>\n                        <input formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                      </div> -->\n\n                      <div class=\"form-group auth-form-group-custom mt-5 mb-4\">\n                        <i class=\"ri-lock-2-line auti-custom-input-icon\"></i>\n                        <label for=\"password\">Mot de passe</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"mot de passe\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.password.errors.required\">Le mot de passe est requis</div>\n                        </div>\n                      </div>\n\n                      <div class=\"mt-3\" *ngIf=\"submitted\">\n                        <div *ngIf=\"!!incorrect\" class=\"alert alert-primary\">\n                          {{msgErr}}\n                        </div><div  class=\"alert alert-primary\" *ngIf=\"!incorrect\">{{msgErr}}</div></div>\n\n                      <!-- <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n                        <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n                      </div> -->\n\n                      <div class=\"mt-4 text-center\">\n                        <button class=\"btn btn-primary w-md waves-effect waves-light mt-5 mb-4\" type=\"submit\">Se connecter</button>\n                      </div>\n\n                      <!-- <div class=\"mt-4 text-center\">\n                        <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i>\n                          Forgot\n                          your\n                          password?</a>\n                      </div> -->\n                    </form>\n                  </div>\n\n                  <div class=\"mt-5 text-center mt-5\">\n                    <p>© 2020 CERAMIC. Creer <i class=\"mdi mdi-heart text-danger\"></i>par Dassi Idriss</p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8\">\n        <div class=\"authentication-bg\">\n          <div class=\"bg-overlay\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- end page -->\n"],"sourceRoot":"webpack:///"}